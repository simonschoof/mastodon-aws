version: '3'
services:
  db:
    restart: always
    image: postgres:14-alpine
    container_name: mastodon-postgres
    shm_size: 256mb
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'postgres']
    ports:
      - 5432:5432
    volumes:
      - ./postgres14:/var/lib/postgresql/data
    environment:
      - 'POSTGRES_HOST_AUTH_METHOD=trust'

  redis:
    restart: always
    image: redis:7-alpine
    container_name: mastodon-redis
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
    ports:
      - 6379:6379
    volumes:
      - ./redis:/data
  
  http:
    restart: always
    image: nginx:1-alpine
    container_name: mastodon-nginx
    ports:
        - 443:443
        - 80:80
    volumes:
        - ./nginx/tmp:/var/run/nginx
        - ./nginx/conf.d:/etc/nginx/conf.d
        - ./nginx/certs:/etc/letsencrypt/
        - ./nginx/lebase:/lebase

  mailcatcher:
    restart: always
    image: schickling/mailcatcher
    container_name: mastodon-mailcatcher
    ports:
      - 1025:1025
      - 1080:1080
  
  minio:
    restart: always
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_storage:/data
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    command: server --console-address ":9001" /data
  
  createbuckets:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set myminio http://minio:9000 minio minio123;
      /usr/bin/mc mb myminio/files.social.localhost;
      /usr/bin/mc anonymous set public myminio/files.social.localhost;
      exit 0;
      "

  web:
    image: tootsuite/mastodon:v4.1.1
    container_name: mastodon-web
    restart: always
    env_file: .env.development
    command: bash -c "rm -f /mastodon/tmp/pids/server.pid; bundle exec rails s -p 3000"
    healthcheck:
      # prettier-ignore
      test: ['CMD-SHELL', 'wget -q --spider --proxy=off localhost:3000/health || exit 1']
    ports:
      - 3000:3000
    depends_on:
      - db
      - redis
      - http
      - mailcatcher
      - minio
      - createbuckets
      # - es
    volumes:
      - ./public/system:/mastodon/public/system

  streaming:
    image: tootsuite/mastodon:v4.1.1
    container_name: mastodon-streaming
    restart: always
    env_file: .env.development
    command: node ./streaming
    healthcheck:
      # prettier-ignore
      test: ['CMD-SHELL', 'wget -q --spider --proxy=off localhost:4000/api/v1/streaming/health || exit 1']
    ports:
      - 4000:4000
    depends_on:
      - db
      - redis
      - http
      - mailcatcher
      - minio
      - createbuckets

  sidekiq:
    image: tootsuite/mastodon:v4.1.1
    container_name: mastodon-sidekiq
    restart: always
    env_file: .env.development
    command: bundle exec sidekiq
    depends_on:
      - db
      - redis
      - http
      - mailcatcher
      - minio     
      - createbuckets
    volumes:
      - ./public/system:/mastodon/public/system
    healthcheck:
      test: ['CMD-SHELL', "ps aux | grep '[s]idekiq\ 6' || false"]


volumes:
  minio_storage: {}